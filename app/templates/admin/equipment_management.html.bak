{% extends 'base.html' %}

{% block title %}Equipment Management - Admin - Equipment Tracker{% endblock %}

{% block content %}
<div class="row mb-4">
    <div class="col-md-8">
        <h1>Equipment Management <span class="badge bg-warning">UPDATED</span></h1>
        <p class="lead">Add, edit, or remove equipment items in the system. <strong>Direct Edit: May 10, 2025</strong></p>
    </div>
    <div class="col-md-4 text-end">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addEquipmentModal">
            <i class="bi bi-plus-circle"></i> Add New Equipment
        </button>
        <a href="{{ url_for('checkout.admin') }}" class="btn btn-outline-secondary ms-2">
            <i class="bi bi-arrow-left"></i> Back to Admin
        </a>
    </div>
</div>

<!-- Equipment Stats Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body text-center">
                <h5 class="card-title">Total Equipment</h5>
                <h2 class="display-4">{{ stats.total_equipment }}</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body text-center">
                <h5 class="card-title">Chambers</h5>
                <h2 class="display-4">{{ stats.chambers_count }}</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body text-center">
                <h5 class="card-title">Electrometers</h5>
                <h2 class="display-4">{{ stats.electrometers_count }}</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body text-center">
                <h5 class="card-title">Survey Meters</h5>
                <h2 class="display-4">{{ stats.survey_meters_count }}</h2>
            </div>
        </div>
    </div>
</div>

<!-- Filter and Search Row -->
<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>Filter Equipment</h5>
            </div>
            <div class="card-body">
                <form action="{{ url_for('admin.equipment_management') }}" method="GET" class="row g-3">
                    <div class="col-md-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select" id="category" name="category">
                            <option value="">All Categories</option>
                            {% for category in categories %}
                            <option value="{{ category }}" {% if selected_category == category %}selected{% endif %}>{{ category }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="manufacturer" class="form-label">Manufacturer</label>
                        <select class="form-select" id="manufacturer" name="manufacturer">
                            <option value="">All Manufacturers</option>
                            {% for manufacturer in manufacturers %}
                            <option value="{{ manufacturer }}" {% if selected_manufacturer == manufacturer %}selected{% endif %}>{{ manufacturer }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="location" class="form-label">Location</label>
                        <select class="form-select" id="location" name="location">
                            <option value="">All Locations</option>
                            {% for location in locations %}
                            <option value="{{ location }}" {% if selected_location == location %}selected{% endif %}>{{ location }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-filter"></i> Apply Filters
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Equipment Table -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Equipment List</h5>
                <span class="badge bg-secondary">{{ equipment|length }} items</span>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover" id="equipmentTable">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Category</th>
                                <th>Type</th>
                                <th>Manufacturer</th>
                                <th>Model</th>
                                <th>Serial Number</th>
                                <th>Location</th>
                                <th>Calibration Due</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for item in equipment %}
                            <tr>
                                <td>{{ item.id }}</td>
                                <td>{{ item.category }}</td>
                                <td>{{ item.equipment_type }}</td>
                                <td>{{ item.manufacturer }}</td>
                                <td>{{ item.model }}</td>
                                <td>{{ item.serial_number }}</td>
                                <td>{{ item.location }}</td>
                                <td>{{ item.calibration_due_date }}</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-outline-primary edit-btn"
                                            data-id="{{ item.id }}"
                                            data-category="{{ item.category }}"
                                            data-type="{{ item.equipment_type }}"
                                            data-manufacturer="{{ item.manufacturer }}"
                                            data-model="{{ item.model }}"
                                            data-serial="{{ item.serial_number }}"
                                            data-location="{{ item.location }}"
                                            data-calibration="{{ item.calibration_due_date }}"
                                            data-notes="{{ item.notes|default('') }}"
                                            onclick="editEquipment(this)"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editEquipmentModal">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-info qr-btn"
                                            data-id="{{ item.id }}"
                                            data-manufacturer="{{ item.manufacturer }}"
                                            data-model="{{ item.model }}"
                                            data-serial="{{ item.serial_number }}"
                                            onclick="generateQRCodeDirect(this)">
                                            <i class="bi bi-qr-code"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger delete-btn"
                                            data-id="{{ item.id }}"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteEquipmentModal">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            {% else %}
                            <tr>
                                <td colspan="9" class="text-center">No equipment found</td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Equipment Modal -->
<div class="modal fade" id="addEquipmentModal" tabindex="-1" aria-labelledby="addEquipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentModalLabel">Add New Equipment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form action="{{ url_for('admin.create_equipment') }}" method="POST">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="equipment_id" class="form-label">Equipment ID (Optional)</label>
                            <input type="text" class="form-control" id="equipment_id" name="equipment_id" placeholder="Auto-generated if left blank">
                            <div class="form-text">If left blank, will be generated as Category-Manufacturer-SerialNumber</div>
                        </div>
                        <div class="col-md-6">
                            <label for="category" class="form-label">Category*</label>
                            <select class="form-select" id="add_category" name="category" required>
                                <option value="">Select Category</option>
                                <option value="Chamber">Chamber</option>
                                <option value="Electrometer">Electrometer</option>
                                <option value="Survey Meter">Survey Meter</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="equipment_type" class="form-label">Equipment Type*</label>
                            <input type="text" class="form-control" id="equipment_type" name="equipment_type" required placeholder="e.g., ionization chamber">
                        </div>
                        <div class="col-md-6">
                            <label for="manufacturer" class="form-label">Manufacturer*</label>
                            <input type="text" class="form-control" id="manufacturer" name="manufacturer" required placeholder="e.g., CNMC">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="model" class="form-label">Model*</label>
                            <input type="text" class="form-control" id="model" name="model" required placeholder="e.g., TN30013">
                        </div>
                        <div class="col-md-6">
                            <label for="serial_number" class="form-label">Serial Number*</label>
                            <input type="text" class="form-control" id="serial_number" name="serial_number" required placeholder="e.g., 123456">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="location" class="form-label">Location*</label>
                            <input type="text" class="form-control" id="location" name="location" required placeholder="e.g., Essen (BR)">
                        </div>
                        <div class="col-md-6">
                            <label for="calibration_due_date" class="form-label">Calibration Due Date*</label>
                            <input type="text" class="form-control" id="calibration_due_date" name="calibration_due_date" required placeholder="e.g., 08/2025">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="3" placeholder="Additional information about this equipment"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-info me-2" id="generateAddQRBtn" onclick="generateQRCode('add')">
                        <i class="bi bi-qr-code"></i> Generate QR Code
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add Equipment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Equipment Modal -->
<div class="modal fade" id="editEquipmentModal" tabindex="-1" aria-labelledby="editEquipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editEquipmentModalLabel">Edit Equipment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editEquipmentForm" action="" method="POST">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="edit_id" class="form-label">Equipment ID</label>
                            <input type="text" class="form-control" id="edit_id" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="edit_category" class="form-label">Category*</label>
                            <select class="form-select" id="edit_category" name="category" required>
                                <option value="Chamber">Chamber</option>
                                <option value="Electrometer">Electrometer</option>
                                <option value="Survey Meter">Survey Meter</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="edit_equipment_type" class="form-label">Equipment Type*</label>
                            <input type="text" class="form-control" id="edit_equipment_type" name="equipment_type" required>
                        </div>
                        <div class="col-md-6">
                            <label for="edit_manufacturer" class="form-label">Manufacturer*</label>
                            <input type="text" class="form-control" id="edit_manufacturer" name="manufacturer" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="edit_model" class="form-label">Model*</label>
                            <input type="text" class="form-control" id="edit_model" name="model" required>
                        </div>
                        <div class="col-md-6">
                            <label for="edit_serial_number" class="form-label">Serial Number*</label>
                            <input type="text" class="form-control" id="edit_serial_number" name="serial_number" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="edit_location" class="form-label">Location*</label>
                            <input type="text" class="form-control" id="edit_location" name="location" required>
                        </div>
                        <div class="col-md-6">
                            <label for="edit_calibration_due_date" class="form-label">Calibration Due Date*</label>
                            <input type="text" class="form-control" id="edit_calibration_due_date" name="calibration_due_date" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="edit_notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="edit_notes" name="notes" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-info me-2" id="generateQRBtn" data-id="" onclick="generateQRCode('edit')">
                        <i class="bi bi-qr-code"></i> Generate QR Code
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Equipment Modal -->
<div class="modal fade" id="deleteEquipmentModal" tabindex="-1" aria-labelledby="deleteEquipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteEquipmentModalLabel">Delete Equipment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the equipment item <strong id="delete_equipment_id"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteEquipmentForm" action="" method="POST">
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- QR Code Modal -->
<div class="modal fade" id="qrCodeModal" tabindex="-1" aria-labelledby="qrCodeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="qrCodeModalLabel">Generated QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div id="qrCodeLoading" class="mb-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Generating QR code...</p>
                </div>
                <div id="qrCodeError" class="alert alert-danger" style="display: none;">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    Error generating QR code. Please ensure all required fields are filled.
                </div>
                <div id="qrCodeDisplay" style="display: none;">
                    <img id="qrCodeImage" src="" alt="Generated QR Code" class="img-fluid mb-3" style="max-width: 300px;">
                    <div class="mt-2">
                        <p class="mb-2"><strong id="qrCodeEquipmentId">Equipment ID: </strong></p>
                        <p class="mb-2">Scan this QR code for quick access to equipment details, checkout, and maintenance.</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a id="qrCodeDownloadBtn" href="#" class="btn btn-primary" download="qr_code.png" style="display: none;">
                    <i class="bi bi-download"></i> Download QR Code
                </a>
                <a id="qrCodePrintBtn" href="#" class="btn btn-outline-primary" onclick="printQRCode()" style="display: none;">
                    <i class="bi bi-printer"></i> Print
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Debug Message Container -->
<div id="debug-container" style="position: fixed; bottom: 10px; left: 10px; z-index: 9999; display: none;"></div>

{% endblock %}

{% block scripts %}
<script>
    // Debug utility function
    function showDebug(message, isError = false) {
        console.log(message);
        
        const container = document.getElementById('debug-container');
        container.style.display = 'block';
        container.style.backgroundColor = isError ? '#f8d7da' : '#d1e7dd';
        container.style.color = isError ? '#721c24' : '#155724';
        container.style.padding = '10px';
        container.style.borderRadius = '5px';
        container.style.border = isError ? '1px solid #f5c6cb' : '1px solid #c3e6cb';
        container.style.maxWidth = '80%';
        container.innerHTML = message;
        
        setTimeout(() => {
            container.style.display = 'none';
        }, 5000);
    }

    // Function to edit equipment (called directly from edit button click)
    function editEquipment(button) {
        // Get all data attributes from the button
        const data = {
            id: button.getAttribute('data-id'),
            category: button.getAttribute('data-category'),
            type: button.getAttribute('data-type'),
            manufacturer: button.getAttribute('data-manufacturer'),
            model: button.getAttribute('data-model'),
            serial: button.getAttribute('data-serial'),
            location: button.getAttribute('data-location'),
            calibration: button.getAttribute('data-calibration'),
            notes: button.getAttribute('data-notes') || ''
        };
        
        console.log("Edit equipment data:", data);
        showDebug(`Editing equipment: ${data.id} - ${data.manufacturer} ${data.model}`);
        
        // Set form action
        document.getElementById('editEquipmentForm').action = `/admin/equipment/edit/${data.id}`;
        
        // Set form fields - doing this with a slight delay to ensure the modal is open
        setTimeout(() => {
            // Set all form fields with their respective values
            document.getElementById('edit_id').value = data.id;
            document.getElementById('edit_category').value = data.category;
            document.getElementById('edit_equipment_type').value = data.type;
            document.getElementById('edit_manufacturer').value = data.manufacturer;
            document.getElementById('edit_model').value = data.model;
            document.getElementById('edit_serial_number').value = data.serial;
            document.getElementById('edit_location').value = data.location;
            document.getElementById('edit_calibration_due_date').value = data.calibration;
            document.getElementById('edit_notes').value = data.notes;
            
            // Set QR button data
            document.getElementById('generateQRBtn').setAttribute('data-id', data.id);
        }, 200); // 200ms delay to ensure modal is open
    }

    // Handle delete equipment modal
    document.addEventListener('DOMContentLoaded', function() {
        // Handle Delete Equipment Modal
        const deleteButtons = document.querySelectorAll('.delete-btn');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');

                // Set ID in confirmation message
                document.getElementById('delete_equipment_id').textContent = id;

                // Set form action URL
                document.getElementById('deleteEquipmentForm').action = `/admin/equipment/delete/${id}`;
            });
        });

        // Initialize DataTable if available
        if (typeof $.fn.DataTable !== 'undefined') {
            $('#equipmentTable').DataTable({
                pageLength: 25,
                responsive: true
            });
        }
    });

    // Function to generate QR code directly from the equipment list
    function generateQRCodeDirect(buttonElement) {
        console.log("generateQRCodeDirect called");
        
        // Show the QR code modal
        const qrModal = new bootstrap.Modal(document.getElementById('qrCodeModal'));
        qrModal.show();

        // Show loading state
        document.getElementById('qrCodeLoading').style.display = 'block';
        document.getElementById('qrCodeError').style.display = 'none';
        document.getElementById('qrCodeDisplay').style.display = 'none';
        document.getElementById('qrCodeDownloadBtn').style.display = 'none';
        document.getElementById('qrCodePrintBtn').style.display = 'none';

        // Get equipment data from the button's data attributes
        const equipmentId = buttonElement.getAttribute('data-id');
        const manufacturer = buttonElement.getAttribute('data-manufacturer');
        const model = buttonElement.getAttribute('data-model');
        const serialNumber = buttonElement.getAttribute('data-serial');

        console.log("QR Code data:", { equipmentId, manufacturer, model, serialNumber });

        // Validate required fields
        if (!equipmentId || !manufacturer || !serialNumber) {
            document.getElementById('qrCodeLoading').style.display = 'none';
            document.getElementById('qrCodeError').textContent = "Missing required fields (equipment ID, manufacturer, or serial number)";
            document.getElementById('qrCodeError').style.display = 'block';
            console.error("Missing required fields:", { equipmentId, manufacturer, serialNumber });
            return;
        }

        // Construct the URL for the QR code - direct to the equipment detail page
        const baseUrl = window.location.origin;
        const qrUrl = `${baseUrl}/qr/equipment/${equipmentId}`;
        console.log("QR URL:", qrUrl);

        // Make AJAX request to generate the QR code
        const requestData = {
            url: qrUrl,
            equipment_id: equipmentId,
            manufacturer: manufacturer,
            model: model,
            serial: serialNumber
        };

        console.log("Sending request to generate QR code:", requestData);

        fetch('/admin/equipment/generate-qr', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData),
        })
        .then(response => {
            console.log("Response status:", response.status);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log("QR code response:", data);
            
            // Hide loading, show QR code
            document.getElementById('qrCodeLoading').style.display = 'none';

            if (data.status === 'success') {
                document.getElementById('qrCodeDisplay').style.display = 'block';
                document.getElementById('qrCodeImage').src = data.qr_code_url;
                document.getElementById('qrCodeEquipmentId').textContent = `Equipment ID: ${equipmentId}`;

                // Set download link
                const downloadBtn = document.getElementById('qrCodeDownloadBtn');
                downloadBtn.href = data.qr_code_url;
                downloadBtn.download = `qr_code_${equipmentId}.png`;
                downloadBtn.style.display = 'inline-block';

                // Show print button
                document.getElementById('qrCodePrintBtn').style.display = 'inline-block';
            } else {
                document.getElementById('qrCodeError').textContent = data.message || 'Failed to generate QR code';
                document.getElementById('qrCodeError').style.display = 'block';
            }
        })
        .catch(error => {
            // Show error
            document.getElementById('qrCodeLoading').style.display = 'none';
            document.getElementById('qrCodeError').textContent = `Error: ${error.message}`;
            document.getElementById('qrCodeError').style.display = 'block';
            console.error('Error generating QR code:', error);
        });
    }

    function generateQRCode(mode) {
        console.log(`generateQRCode called with mode: ${mode}`);
        
        // Show the QR code modal
        const qrModal = new bootstrap.Modal(document.getElementById('qrCodeModal'));
        qrModal.show();

        // Show loading state
        document.getElementById('qrCodeLoading').style.display = 'block';
        document.getElementById('qrCodeError').style.display = 'none';
        document.getElementById('qrCodeDisplay').style.display = 'none';
        document.getElementById('qrCodeDownloadBtn').style.display = 'none';
        document.getElementById('qrCodePrintBtn').style.display = 'none';

        // Get equipment data based on the mode (add or edit)
        let equipmentId, manufacturer, model, serialNumber;

        if (mode === 'add') {
            // Get values from add form
            equipmentId = document.getElementById('equipment_id').value.trim();
            manufacturer = document.getElementById('manufacturer').value.trim();
            model = document.getElementById('model').value.trim();
            serialNumber = document.getElementById('serial_number').value.trim();

            // If equipment ID is not provided, generate it from other fields
            if (!equipmentId && manufacturer && serialNumber) {
                const category = document.getElementById('add_category').value.trim();
                equipmentId = `${category}-${manufacturer}-${serialNumber}`;
            }
            
            console.log("Add form QR data:", { equipmentId, manufacturer, model, serialNumber });
            
        } else if (mode === 'edit') {
            // Get values from edit form
            equipmentId = document.getElementById('edit_id').value.trim();
            manufacturer = document.getElementById('edit_manufacturer').value.trim();
            model = document.getElementById('edit_model').value.trim();
            serialNumber = document.getElementById('edit_serial_number').value.trim();
            
            console.log("Edit form QR data:", { equipmentId, manufacturer, model, serialNumber });
        }

        // Validate required fields
        if (!equipmentId || !manufacturer || !serialNumber) {
            document.getElementById('qrCodeLoading').style.display = 'none';
            document.getElementById('qrCodeError').textContent = "Missing required fields (equipment ID, manufacturer, or serial number)";
            document.getElementById('qrCodeError').style.display = 'block';
            console.error("Missing required fields:", { equipmentId, manufacturer, serialNumber });
            return;
        }

        // Construct the URL for the QR code - direct to the equipment detail page
        const baseUrl = window.location.origin;
        const qrUrl = `${baseUrl}/qr/equipment/${equipmentId}`;
        console.log("QR URL:", qrUrl);

        // Make AJAX request to generate the QR code
        const requestData = {
            url: qrUrl,
            equipment_id: equipmentId,
            manufacturer: manufacturer,
            model: model,
            serial: serialNumber
        };

        console.log("Sending request to generate QR code:", requestData);

        fetch('/admin/equipment/generate-qr', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData),
        })
        .then(response => {
            console.log("Response status:", response.status);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log("QR code response:", data);
            
            // Hide loading, show QR code
            document.getElementById('qrCodeLoading').style.display = 'none';

            if (data.status === 'success') {
                document.getElementById('qrCodeDisplay').style.display = 'block';
                document.getElementById('qrCodeImage').src = data.qr_code_url;
                document.getElementById('qrCodeEquipmentId').textContent = `Equipment ID: ${equipmentId}`;

                // Set download link
                const downloadBtn = document.getElementById('qrCodeDownloadBtn');
                downloadBtn.href = data.qr_code_url;
                downloadBtn.download = `qr_code_${equipmentId}.png`;
                downloadBtn.style.display = 'inline-block';

                // Show print button
                document.getElementById('qrCodePrintBtn').style.display = 'inline-block';
            } else {
                document.getElementById('qrCodeError').textContent = data.message || 'Failed to generate QR code';
                document.getElementById('qrCodeError').style.display = 'block';
            }
        })
        .catch(error => {
            // Show error
            document.getElementById('qrCodeLoading').style.display = 'none';
            document.getElementById('qrCodeError').textContent = `Error: ${error.message}`;
            document.getElementById('qrCodeError').style.display = 'block';
            console.error('Error generating QR code:', error);
        });
    }

    // Function to print the QR code
    function printQRCode() {
        const printWindow = window.open('', '_blank');
        const qrImage = document.getElementById('qrCodeImage').src;
        const equipmentId = document.getElementById('qrCodeEquipmentId').textContent;

        printWindow.document.write(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>QR Code - ${equipmentId}</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        text-align: center;
                        padding: 20px;
                    }
                    img {
                        max-width: 300px;
                        height: auto;
                    }
                    .container {
                        display: inline-block;
                        border: 1px solid #ccc;
                        padding: 20px;
                        margin: 10px;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <img src="${qrImage}" alt="QR Code">
                    <div>
                        <p><strong>${equipmentId}</strong></p>
                        <p>Mary Bird Perkins Cancer Center</p>
                    </div>
                </div>
                <script>
                    window.onload = function() {
                        setTimeout(() => {
                            window.print();
                            setTimeout(() => {
                                window.close();
                            }, 100);
                        }, 500);
                    };
                </script>
            </body>
            </html>
        `);
        printWindow.document.close();
    }
</script>
{% endblock %}